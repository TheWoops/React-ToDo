{"version":3,"sources":["components/Todo.js","components/Form.js","components/FilterButton.js","App.js","index.js"],"names":["Todo","props","useState","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","value","ref","useEffect","current","console","log","usePrevious","editingTemplate","className","htmlFor","id","newname","type","onChange","e","target","onClick","name","preventDefault","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","Form","setName","onSubmit","autoComplete","FilterButton","aria-pressed","isPressed","setFilter","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","filter","listHeadingRef","filterList","map","updatedTasks","tasks","setTasks","taskList","taskNoun","length","headingText","remainingTasks","editedTaskList","prevTaskLength","newTask","nanoid","tabIndex","aria-labelledby","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8bbc946.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function Todo(props){\r\n    const [isEditing, setEditing] = useState(false);\r\n    const [newName, setNewName] = useState('');\r\n    const editFieldRef = useRef(null); // the only property this object has is current\r\n    const editButtonRef = useRef(null);\r\n    const wasEditing = usePrevious(isEditing);\r\n\r\n    function handleChange(e){\r\n      setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSave(e) {\r\n      e.preventDefault();\r\n      props.editTask(props.id, newName);\r\n      setNewName(\"\");\r\n      setEditing(false);\r\n    }\r\n\r\n  function usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    console.log(ref.current)\r\n    return ref.current;\r\n  }\r\n\r\n    const editingTemplate = (\r\n      <form className=\"stack-small\">\r\n        <div className=\"form-group\">\r\n          <label className=\"todo-label\" htmlFor={props.id}>\r\n            New name for {props.newname}\r\n          </label>\r\n          <input \r\n            id={props.id} \r\n            className=\"todo-text\"\r\n            type=\"text\" \r\n            value = {newName}\r\n            onChange = {handleChange}\r\n            ref={editFieldRef}/>\r\n        </div>\r\n        <div className=\"btn-group\">\r\n          <button\r\n           type=\"button\"\r\n           className=\"btn todo-cancel\"\r\n           onClick = {() => setEditing(false)}>\r\n            Cancel\r\n            <span className=\"visually-hidden\">renaming {props.name}</span>\r\n          </button>\r\n          <button\r\n           type=\"submit\"\r\n            className=\"btn btn__primary todo-edit\"\r\n            onClick = {handleSave}>\r\n            Save\r\n            <span className=\"visually-hidden\">new name for {props.name}</span>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n    const viewTemplate = (\r\n      <div className=\"stack-small\">\r\n        <div className=\"c-cb\">\r\n            <input\r\n              id={props.id}\r\n              type=\"checkbox\"\r\n              defaultChecked={props.completed}\r\n              onChange={() => props.toggleTaskCompleted(props.id)}\r\n            />\r\n            <label className=\"todo-label\" htmlFor={props.id}>\r\n              {props.name}\r\n            </label>\r\n          </div>\r\n          <div className=\"btn-group\">\r\n            <button\r\n             type=\"button\"\r\n             className=\"btn\"\r\n             onClick={() => setEditing(true)}\r\n             ref={editButtonRef}>\r\n              Edit <span className=\"visually-hidden\">{props.name}</span>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn__danger\"\r\n              onClick = {() => props.deleteTask(props.id)}\r\n            >\r\n              Delete <span className=\"visually-hidden\">{props.name}</span>\r\n            </button>\r\n          </div>\r\n      </div>\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (!wasEditing && isEditing) {\r\n        editFieldRef.current.focus();\r\n      }\r\n      if (wasEditing && !isEditing) {\r\n        editButtonRef.current.focus();\r\n      }\r\n    }, [wasEditing, isEditing]);\r\n\r\n    return (\r\n      <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\n\r\n\r\nfunction Form(props){\r\n\r\n    const [name, setName] = useState('');\r\n\r\n    function handleChange(e){\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onSubmit(name);\r\n        setName(\"\");\r\n      }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n        <h2 className=\"label-wrapper\">\r\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n            What needs to be done?\r\n          </label>\r\n        </h2>\r\n        <input\r\n          type=\"text\"\r\n          id=\"new-todo-input\"\r\n          className=\"input input__lg\"\r\n          name=\"text\"\r\n          autoComplete=\"off\"\r\n          value = {name}\r\n          onChange = {handleChange}\r\n        />\r\n        <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n          Add\r\n        </button>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nfunction FilterButton(props){\r\n    return (\r\n        <button type=\"button\"\r\n         className=\"btn toggle-btn\"\r\n         aria-pressed={props.isPressed}\r\n         onClick = {() => props.setFilter(props.name)}\r\n        >\r\n        <span className=\"visually-hidden\">Show </span>\r\n        <span>{props.name}</span>\r\n        <span className=\"visually-hidden\"> tasks</span>\r\n      </button>\r\n    );\r\n}\r\n\r\nexport default FilterButton;","import React, { useEffect, useRef, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n\n  const [filter, setFilter] = useState('All');\n  const listHeadingRef = useRef(null);\n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n     key={name}\n     name={name}\n     setFilter = {setFilter}\n     isPressed = {name === filter}\n    />\n  ));\n\n  function toggleTaskCompleted(id) {\n\n    const updatedTasks = tasks.map(task => {\n\n      if (task.id === id){\n        return {...task, completed : !task.completed}\n      }\n      return task\n    } );\n    setTasks(updatedTasks);\n  }\n\n  const [tasks, setTasks] = useState(props.tasks);\n  const taskList = tasks\n  .filter(FILTER_MAP[filter])\n  .map(task =>\n     <Todo \n     id = {task.id}\n     name = {task.name} \n     completed = {task.completed}\n     key = {task.id}\n     toggleTaskCompleted={toggleTaskCompleted}\n     deleteTask = {deleteTask} \n     editTask = {editTask}/>);\n  const taskNoun = taskList.length !==1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${taskNoun} remaining`;\n\n  function addTask(name){\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n\n  const prevTaskLength = usePrevious(tasks.length);\n\n  \n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n  \n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form onSubmit = {addTask}/>\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex = \"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n\n      {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst DATA = [\n  {id:\"todo-0\", name:\"Eat\", completed: true},\n  {id:\"todo-1\", name:\"Sleep\", completed: false},\n  {id:\"todo-2\", name:\"Repeat\", completed: false}\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks = {DATA}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}